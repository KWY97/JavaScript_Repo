[웹에서의 이벤트]
 - 화면을 스크롤하는 것
 - 버튼을 클릭했을 때 팝업 창이 출력되는 것 등

 -> 웹에서의 모든 동작은 이벤트 발생과 함께 한다.

<event 객체>
 - event: 무언가 일어났다는 신호, 사건
   -> 모든 DOM 요소는 이러한 event를 만들어냄

 - 'event' object
  - DOM에서 이벤트가 발생했을 때 생성되는 객체
  - 이벤트 종류
   - mouse, input, keyboard, touch 등

 -> DOM 요소에서 event가 발생하면, 해당 event는 연결된 이벤트처리기(event handler)에 의해 처리됨

 - event handler
  - 특정 이벤트가 발생했을 때 실행되는 함수
  -> 사용자의 행동에 어떻게 반응할지를 JavaScript 코드로 표효한 것

  - .addEvnetListener()
   - 대표적인 이벤트 핸들러 중 하나 (메서드임)
   -> 특정 이벤트를 DOM 요소가 수신할 때마다 콜백 함수를 호출

   - EventTarget.addEvnetListener(type, handler)
     (DOM요소)                   (수신할 이벤트, 콜백 함수)

    -> 대상(DOM 요소, EventTarget)에 
       특정 Event(수신할 이벤트, type)가 발생하면,
       지정한 이벤트를 받아 할 일(콜백 함수, handler)을 등록한다.

    - type
     - 수신할 이벤트 이름
     - 문자열로 작성

    - handler
     - 발생한 이벤트 객체를 수신하는 콜백 함수
     - 이벤트 핸들러는 자동으로 event 객체를 매개변수로 받음

    - addEvnetListener의 콜백 함수 특징
     - 요소에 addEvnetListener를 연결하게 되면 내부의 this 값은 연결된 요소를 가리키게 됨
       (event 객체의 currentTarget 속성 값과 동일)
       
     - 이벤트 핸들러 내부의 this는 이벤트 리스너에 연결된 요소(currentTarget)를 가리킴
     - 이벤트가 발생하면 event 객체가 생성되어 첫 번째 인자로 전달
      - event 객체가 필요 없는 경우 생략 가능
     - 반환 값 없음