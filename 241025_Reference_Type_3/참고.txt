<콜백 함수의 이점>
 - 콜백 함수 구조를 사용하는 이유
  1. 함수의 재사용성 측면
   - 함수를 호출하는 코드에서 콜백 함수의 동작을 자유롭게 변경할 수 있음
   - 예를 들어, map 함수는 콜백 함수를 인자로 받아 배열의 각 요소를 순회하며 콜백 함수를 실행
   - 이때, 콜백 함수는 각 요소를 변환하는 로직을 담당하므로, map 함수를 호출하는 코드는 간결하고 가독성이 높아짐

  2. 비동기적 처리 측면 (예시: 49p ~ 50p, 실습코드: 99-asynchronous.html)
   동기 -> 순차적 처리
   비동기 -> 병렬적 처리

   -> 이 부분은 다음에 본다고 오늘은 1번 함수의 재사용성 측면에 집중


<forEach에서 break 사용하기> (예시: 52p ~ 54p, 실습코드: 99-break-foreach.html)
 forEach에서는 break 키워드를 사용할 수 없음
 대신 some과 every의 특징을 활용해 마치 break를 사용하는 것처럼 활용할 수 있음


<배열은 객체다>
 - 배열도 키와 속성들을 담고 있는 참조 타입의 객체
 - 배열의 요소를 대괄호 접근법을 사용해 접근하는건 객체 문법과 같음
  - 배열의 키는 숫자(인덱스)
 - 숫자형 키를 사용함으로써 배열은 객체 기본 기능 이외에도 
   "순서가 있는 컬렉션"을 제어하게 해주는 특별한 메서드를 제공하는 것

 - 배열은 인덱스를 키로 가지며 length 속성을 갖는 특수한 객체

 

